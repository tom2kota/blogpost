# React-Redux App Build CI ... jobs: 1) greeting 2) deploying project to GitHub Pages after testing before
# Some help: https://help.github.com/en/actions/reference/context-and-expression-syntax-for-github-actions
# Generate token: https://github.com/settings/apps
# Create secrets: https://github.com/tom2kota/increment-decrement/settings/secrets
# Add path to package.json: ... "homepage": "https://tom2kota.github.io/increment",
# Fix build path links in: ... public/index.html
# ----------------------------------------------------------------------------------

name: React_App_Deploy_to_gh-pages_CI
env:
  APPLICATION_NAME: 'App Deploy CI'
  DEPLOY_PACKAGE_NAME: 'rap-v-${{ github.sha }}'
  MY_REPO: ${{github.repository}}.git


on:
  pull_request:
    branches: [ master ]
  watch:
    types: [started]

jobs:
  greeting:
    runs-on: ubuntu-latest

    if: github.actor == github.event.repository.owner.login

    steps:
      - name: Greeting
        run: |
          echo 'Hi guys ...'
          echo 'we just try to Deploy our React-Redux-SPA ... ${{env.APPLICATION_NAME}}'
          echo 'with version: ${{env.DEPLOY_PACKAGE_NAME}}'
  deploying:
    runs-on: ubuntu-latest
    needs: [greeting]
    strategy:
      matrix:
        node-version: [13.x]
    steps:
      
      - name: Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
        uses: actions/checkout@v2

      - name: Use Node.js version ... ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install Packages (npm ci) ... It will never write to package.json or any of the package-locks, installs are essentially frozen
        run: npm install

      - name: List current folder ... before
        run: ls -la
      
      - name: NPM Version
        run: npm -v
        
      - name: Node Version
        run: node -v

      - name: Deploy project to GitHub Pages
        run: |
          echo 'Git Repo: ${{env.MY_REPO}}'
          git config --global user.email ${{secrets.MY_SECRET_EMAIL}}
          git config --global user.name ${{secrets.MY_SECRET_USERNAME}}
          git remote set-url origin https://${{secrets.MY_SECRET_PERSONAL_ACCESS_TOKEN}}@github.com/${{env.MY_REPO}}
          npm run deploy
      - name: List current folder ... after
        run: ls -la

      - name: Updating Domain ... (SELECT gh-pages branch to publish)
        run: echo 'Update domain - GitHub Pages (SELECT gh-pages branch to publish)'

        env:
          CI: true
